.container {
  width: 100%;
  max-width: 430px;
  height: 100vh;
  margin: 0 auto;
  background: #000000;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

/* Header */
.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 54px 20px 20px;
  background: #000000;
}

.backButton {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s;
}

.backButton:hover {
  background: rgba(255, 255, 255, 0.1);
}

.headerTitle {
  font-size: 20px;
  font-weight: 600;
  color: #ffffff;
}

.editButton {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s;
}

.editButton:hover {
  background: rgba(255, 255, 255, 0.1);
}

/* Content */
.content {
  flex: 1;
  overflow-y: auto;
  padding: 0 20px 40px;
}

/* Avatar Section */
.avatarSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px 0 32px;
}

.avatarLarge {
  width: 120px;
  height: 120px;
  background: #2C2C2E;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 16px;
}

.profileName {
  font-size: 24px;
  font-weight: 700;
  color: #ffffff;
  margin-bottom: 4px;
}

.profileEmail {
  font-size: 15px;
  color: #8E8E93;
}

/* Stats Grid */
.statsGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
  margin-bottom: 24px;
}

.statCard {
  background: #1C1C1E;
  border-radius: 16px;
  padding: 20px;
  text-align: center;
  cursor: pointer;
  transition: all 0.2s;
}

.statLabel {
  font-size: 13px;
  color: #8E8E93;
  margin-bottom: 8px;
}

.statValue {
  font-size: 32px;
  font-weight: 700;
  line-height: 1;
}

/* Info Section */
.infoSection {
  margin-bottom: 24px;
}

.sectionTitle {
  font-size: 20px;
  font-weight: 700;
  color: #ffffff;
  margin-bottom: 16px;
}

.infoCard {
  background: #1C1C1E;
  border-radius: 16px;
  overflow: hidden;
}

.infoItem {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 16px;
}

.infoIcon {
  width: 40px;
  height: 40px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.infoContent {
  flex: 1;
}

.infoLabel {
  font-size: 13px;
  color: #8E8E93;
  margin-bottom: 4px;
}

.infoValue {
  font-size: 16px;
  font-weight: 600;
  color: #ffffff;
}

.infoDivider {
  height: 1px;
  background: #2C2C2E;
  margin: 0 16px;
}

/* Actions Section */
.actionsSection {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.actionButton {
  display: flex;
  align-items: center;
  gap: 12px;
  width: 100%;
  padding: 16px;
  background: #1C1C1E;
  border-radius: 12px;
  transition: background 0.2s;
  text-align: left;
}

.actionIcon {
  width: 40px;
  height: 40px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.actionText {
  flex: 1;
  font-size: 16px;
  font-weight: 600;
  color: #ffffff;
}

/* Responsive */
@media (max-width: 430px) {
  .container {
    max-width: 100%;
  }
}
'use client'

import { motion } from 'framer-motion'
import { useRouter } from 'next/navigation'
import styles from './profile.module.css'

interface ProfileData {
  name: string
  email: string
  phone: string
  studentId: string
  faculty: string
  course: number
  group: string
  gpa: number
  credits: number
}

const profileData: ProfileData = {
  name: 'Григорий Иванов',
  email: 'g.ivanov@university.edu',
  phone: '+7 (999) 123-45-67',
  studentId: '2021-12345',
  faculty: 'Факультет информационных технологий',
  course: 3,
  group: 'ИТ-301',
  gpa: 4.0,
  credits: 180
}

interface StatCard {
  label: string
  value: string
  color: string
}

const stats: StatCard[] = [
  { label: 'Средний балл', value: '4.0', color: '#C8FF00' },
  { label: 'Кредиты', value: '180', color: '#0A84FF' },
  { label: 'Курс', value: '3', color: '#FF6B9F' },
  { label: 'Пропуски', value: '2', color: '#FFB76B' }
]

export default function ProfilePage() {
  const router = useRouter()

  return (
    <div className={styles.container}>
      {/* Header */}
      <header className={styles.header}>
        <motion.button
          className={styles.backButton}
          onClick={() => router.back()}
          whileTap={{ scale: 0.95 }}
        >
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M15 18L9 12L15 6" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        </motion.button>
        <h1 className={styles.headerTitle}>Профиль</h1>
        <button className={styles.editButton}>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M11 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V20C2 20.5304 2.21071 21.0391 2.58579 21.4142C2.96086 21.7893 3.46957 22 4 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V13" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M18.5 2.50001C18.8978 2.10219 19.4374 1.87869 20 1.87869C20.5626 1.87869 21.1022 2.10219 21.5 2.50001C21.8978 2.89784 22.1213 3.4374 22.1213 4.00001C22.1213 4.56262 21.8978 5.10219 21.5 5.50001L12 15L8 16L9 12L18.5 2.50001Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        </button>
      </header>

      <div className={styles.content}>
        {/* Avatar Section */}
        <motion.div
          className={styles.avatarSection}
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.1 }}
        >
          <div className={styles.avatarLarge}>
            <svg width="64" height="64" viewBox="0 0 64 64" fill="none">
              <circle cx="32" cy="24" r="12" fill="white"/>
              <path d="M12 56C12 46 20 40 32 40C44 40 52 46 52 56" fill="white"/>
            </svg>
          </div>
          <h2 className={styles.profileName}>{profileData.name}</h2>
          <p className={styles.profileEmail}>{profileData.email}</p>
        </motion.div>

        {/* Stats Grid */}
        <motion.div
          className={styles.statsGrid}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
        >
          {stats.map((stat, index) => (
            <motion.div
              key={index}
              className={styles.statCard}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <p className={styles.statLabel}>{stat.label}</p>
              <h3 className={styles.statValue} style={{ color: stat.color }}>
                {stat.value}
              </h3>
            </motion.div>
          ))}
        </motion.div>

        {/* Info Section */}
        <motion.div
          className={styles.infoSection}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
        >
          <h3 className={styles.sectionTitle}>Личная информация</h3>

          <div className={styles.infoCard}>
            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M10 10C12.7614 10 15 7.76142 15 5C15 2.23858 12.7614 0 10 0C7.23858 0 5 2.23858 5 5C5 7.76142 7.23858 10 10 10Z" fill="#8E8E93"/>
                  <path d="M10 12C4.477 12 0 14.015 0 16.5V20H20V16.5C20 14.015 15.523 12 10 12Z" fill="#8E8E93"/>
                </svg>
              </div>
              <div className={styles.infoContent}>
                <p className={styles.infoLabel}>Студенческий билет</p>
                <p className={styles.infoValue}>{profileData.studentId}</p>
              </div>
            </div>

            <div className={styles.infoDivider} />

            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M2 4C2 3.46957 2.21071 2.96086 2.58579 2.58579C2.96086 2.21071 3.46957 2 4 2H6.5C6.76522 2 7.01957 2.10536 7.20711 2.29289L9 4H16C16.5304 4 17.0391 4.21071 17.4142 4.58579C17.7893 4.96086 18 5.46957 18 6V14C18 14.5304 17.7893 15.0391 17.4142 15.4142C17.0391 15.7893 16.5304 16 16 16H4C3.46957 16 2.96086 15.7893 2.58579 15.4142C2.21071 15.0391 2 14.5304 2 14V4Z" fill="#8E8E93"/>
                </svg>
              </div>
              <div className={styles.infoContent}>
                <p className={styles.infoLabel}>Факультет</p>
                <p className={styles.infoValue}>{profileData.faculty}</p>
              </div>
            </div>

            <div className={styles.infoDivider} />

            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M17 2H3C2.44772 2 2 2.44772 2 3V17C2 17.5523 2.44772 18 3 18H17C17.5523 18 18 17.5523 18 17V3C18 2.44772 17.5523 2 17 2Z" stroke="#8E8E93" strokeWidth="2"/>
                  <path d="M6 6H14M6 10H14M6 14H10" stroke="#8E8E93" strokeWidth="2" strokeLinecap="round"/>
                </svg>
              </div>
              <div className={styles.infoContent}>
                <p className={styles.infoLabel}>Группа</p>
                <p className={styles.infoValue}>{profileData.group}</p>
              </div>
            </div>

            <div className={styles.infoDivider} />

            <div className={styles.infoItem}>
              <div className={styles.infoIcon}>
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M2 3C2 2.44772 2.44772 2 3 2H6C6.55228 2 7 2.44772 7 3V6C7 6.55228 6.55228 7 6 7H3C2.44772 7 2 6.55228 2 6V3Z" fill="#8E8E93"/>
                  <path d="M9 3C9 2.44772 9.44772 2 10 2H17C17.5523 2 18 2.44772 18 3V6C18 6.55228 17.5523 7 17 7H10C9.44772 7 9 6.55228 9 6V3Z" fill="#8E8E93"/>
                  <path d="M2 10C2 9.44772 2.44772 9 3 9H6C6.55228 9 7 9.44772 7 10V17C7 17.5523 6.55228 18 6 18H3C2.44772 18 2 17.5523 2 17V10Z" fill="#8E8E93"/>
                  <path d="M9 10C9 9.44772 9.44772 9 10 9H17C17.5523 9 18 9.44772 18 10V17C18 17.5523 17.5523 18 17 18H10C9.44772 18 9 17.5523 9 17V10Z" fill="#8E8E93"/>
                </svg>
              </div>
              <div className={styles.infoContent}>
                <p className={styles.infoLabel}>Телефон</p>
                <p className={styles.infoValue}>{profileData.phone}</p>
              </div>
            </div>
          </div>
        </motion.div>

        {/* Actions */}
        <motion.div
          className={styles.actionsSection}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4 }}
        >
          <motion.button
            className={styles.actionButton}
            whileHover={{ backgroundColor: '#1C1C1E' }}
            whileTap={{ scale: 0.98 }}
          >
            <div className={styles.actionIcon} style={{ background: '#0A84FF' }}>
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M10 2C10 2 13 5 13 9C13 13 10 16 10 16C10 16 7 13 7 9C7 5 10 2 10 2Z" stroke="white" strokeWidth="2"/>
                <circle cx="10" cy="9" r="2" fill="white"/>
              </svg>
            </div>
            <span className={styles.actionText}>Мои достижения</span>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M7 15L12 10L7 5" stroke="#8E8E93" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </motion.button>

          <motion.button
            className={styles.actionButton}
            whileHover={{ backgroundColor: '#1C1C1E' }}
            whileTap={{ scale: 0.98 }}
          >
            <div className={styles.actionIcon} style={{ background: '#30D158' }}>
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M10 2V18M2 10H18" stroke="white" strokeWidth="2" strokeLinecap="round"/>
              </svg>
            </div>
            <span className={styles.actionText}>Настройки</span>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M7 15L12 10L7 5" stroke="#8E8E93" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </motion.button>

          <motion.button
            className={styles.actionButton}
            whileHover={{ backgroundColor: '#1C1C1E' }}
            whileTap={{ scale: 0.98 }}
          >
            <div className={styles.actionIcon} style={{ background: '#FF453A' }}>
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M7 2H13V8L10 6L7 8V2Z" fill="white"/>
                <path d="M4 4H6V16H14V4H16V16C16 16.5304 15.7893 17.0391 15.4142 17.4142C15.0391 17.7893 14.5304 18 14 18H6C5.46957 18 4.96086 17.7893 4.58579 17.4142C4.21071 17.0391 4 16.5304 4 16V4Z" fill="white"/>
              </svg>
            </div>
            <span className={styles.actionText}>Мои курсы</span>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M7 15L12 10L7 5" stroke="#8E8E93" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </motion.button>
        </motion.div>
      </div>
    </div>
  )
}
